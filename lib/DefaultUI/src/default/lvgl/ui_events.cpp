// This file was generated by SquareLine Studio
// SquareLine Studio version: SquareLine Studio 1.4.0
// LVGL version: 8.3.11
// Project name: GaggiMate

#include "../DefaultUI.h"
#include "ui.h"
#include <Arduino.h>

void onBrewCancel(lv_event_t *e) {
    s_controller->deactivate();
    s_controller->clear();
}

void onBrewStart(lv_event_t *e) { s_controller->activate(); }

void onBrewTempLower(lv_event_t *e) { s_controller->lowerTemp(); }

void onBrewTempRaise(lv_event_t *e) { s_controller->raiseTemp(); }

void onBrewTimeLower(lv_event_t *e) { s_controller->lowerBrewTarget(); }

void onBrewTimeRaise(lv_event_t *e) { s_controller->raiseBrewTarget(); }

void onSteamToggle(lv_event_t *e) { s_controller->isActive() ? s_controller->deactivate() : s_controller->activate(); }

void onSteamTempLower(lv_event_t *e) { s_controller->lowerTemp(); }

void onSteamTempRaise(lv_event_t *e) { s_controller->raiseTemp(); }

void onBrewScreen(lv_event_t *e) {
    s_controller->deactivate();
    s_controller->setMode(MODE_BREW);
}

void onWaterScreen(lv_event_t *e) {
    s_controller->setMode(MODE_WATER);
    s_controller->deactivate();
}

void onSteamScreen(lv_event_t *e) {
    s_controller->setMode(MODE_STEAM);
    s_controller->deactivate();
}

void onWaterToggle(lv_event_t *e) { s_controller->isActive() ? s_controller->deactivate() : s_controller->activate(); }

void onWakeup(lv_event_t *e) {
    s_controller->deactivate();
    s_controller->setMode(MODE_BREW);
}

void onWaterTempLower(lv_event_t *e) { s_controller->lowerTemp(); }

void onWaterTempRaise(lv_event_t *e) { s_controller->raiseTemp(); }

void onLoadStarted(lv_event_t *e) { s_controller->onScreenReady(); }

void onStandby(lv_event_t *e) { s_controller->activateStandby(); }

void onGrindToggle(lv_event_t *e) { s_controller->isGrindActive() ? s_controller->deactivateGrind() : s_controller->activateGrind(); }

void onGrindTimeLower(lv_event_t *e) { s_controller->lowerGrindTarget(); }

void onGrindTimeRaise(lv_event_t *e) { s_controller->raiseGrindTarget(); }

void onMenuClick(lv_event_t *e) {
    s_controller->setMode(MODE_BREW);
    s_defaultUI->changeScreen(&ui_MenuScreen, &ui_MenuScreen_screen_init);
}

void onGrindScreen(lv_event_t *e) { s_controller->setMode(MODE_GRIND); }

void onTimedClick(lv_event_t *e) { s_controller->onTargetChange(ProcessTarget::TIME); }

void onVolumetricClick(lv_event_t *e) { s_controller->onTargetChange(ProcessTarget::VOLUMETRIC); }

void onGrindTimedClick(lv_event_t *e) {
    // Your code here
}

void onGrindVolumetricClick(lv_event_t *e) {
    // Your code here
}

void onPreviousProfile(lv_event_t *e) {
    // Your code here
}

void onNextProfile(lv_event_t *e) {
    // Your code here
}

void onProfileLoad(lv_event_t *e) {
    // Your code here
}
